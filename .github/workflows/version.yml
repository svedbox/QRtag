name: Auto Version and Commit

on:
  push:
    branches:
      - main

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        persist-credentials: true

    - name: Set up Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Get latest version from file or last tag
      id: get_version
      run: |
        if [ -f version.txt ]; then
          version=$(cat version.txt)
        else
          version=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$version" ]; then
            version="v0.0.0"
          fi
        fi
    echo "Current version: $version"
    echo "version=$version" >> "$GITHUB_OUTPUT"

    - name: Bump patch version
      id: bump
      run: |
        set -e
        set -x

        raw_version="${{ steps.get_version.outputs.version }}"
        version_no_v="${raw_version#v}"

        echo "Parsed version: $version_no_v"

        # Разбить по точкам
        IFS='.' read -r major minor patch <<<"$version_no_v" || {
          echo "Invalid version format: $version_no_v"
          exit 1
        }

        patch=$((patch + 1))
        new_version="v$major.$minor.$patch"

        echo "New version: $new_version"
        echo "$new_version" > version.txt

        echo "new_version=$new_version" >> "$GITHUB_OUTPUT"



    - name: Commit and push version.txt (if changed)
      id: commit
      run: |
        git add version.txt
        if ! git diff --cached --quiet; then
          git commit -m "Bump version to ${{ steps.bump.outputs.new_version }}"
          git push
          echo "committed=true" >> "$GITHUB_OUTPUT"
        else
          echo "No changes to commit"
          echo "committed=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Create Git Tag (if committed)
      if: steps.commit.outputs.committed == 'true'
      run: |
        git tag ${{ steps.bump.outputs.new_version }}
        git push origin ${{ steps.bump.outputs.new_version }}
        

